{
  "comments": [
    {
      "key": {
        "uuid": "4f9067b1_abc6599b",
        "filename": "build/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2018-02-27T23:07:27Z",
      "side": 1,
      "message": "It says this (libstdc++)…",
      "range": {
        "startLine": 25,
        "startChar": 27,
        "endLine": 25,
        "endChar": 36
      },
      "revId": "2ab9fc4da905bd5a2cac6e2d901e9a3e828b8ed1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88568013_b0405676",
        "filename": "build/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2018-02-27T23:07:27Z",
      "side": 1,
      "message": "…and it’s named that way too…",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 29
      },
      "revId": "2ab9fc4da905bd5a2cac6e2d901e9a3e828b8ed1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6c02325_41b504ae",
        "filename": "build/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 170,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2018-02-27T23:07:27Z",
      "side": 1,
      "message": "…and this comment even repeats it…",
      "range": {
        "startLine": 170,
        "startChar": 66,
        "endLine": 170,
        "endChar": 75
      },
      "revId": "2ab9fc4da905bd5a2cac6e2d901e9a3e828b8ed1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2f21e2c_949e76e4",
        "filename": "build/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2018-02-28T14:59:21Z",
      "side": 1,
      "message": "Instead of these three arguments, I think we can just do\n\n  ldflags +\u003d [\n    \"-Wl,-static-libstdc++\",\n  ]\n\nThat should tell the compiler driver to do “-Bstatic -lstdc++ -Bdynamic” for us, which means that we won’t wind up with a freaky linker invocation that mentions -lstdc++ twice. It should also deal with -stdlib\u003dlibc++ better if anyone ever tries that.",
      "revId": "2ab9fc4da905bd5a2cac6e2d901e9a3e828b8ed1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d10c874_b29dd48c",
        "filename": "build/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2018-02-28T18:37:03Z",
      "side": 1,
      "message": "ld.lld doesn\u0027t seem to care for that...\n\n/usr/local/google/work/cp2/crashpad/out/lin/../../third_party/linux/clang/linux-amd64/bin/ld.lld: error: unknown argument: -static-libstdc++\n\nHere\u0027s what --help says: https://gist.github.com/sgraham/f312216df00033ab1051329ca00027f8\n\nSkimming through that now to see if there\u0027s something similar...",
      "parentUuid": "b2f21e2c_949e76e4",
      "revId": "2ab9fc4da905bd5a2cac6e2d901e9a3e828b8ed1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84e45c33_8ede8d42",
        "filename": "build/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2018-02-28T18:55:01Z",
      "side": 1,
      "message": "Oh, it doesn\u0027t want \"-Wl,\" apparently.",
      "parentUuid": "9d10c874_b29dd48c",
      "revId": "2ab9fc4da905bd5a2cac6e2d901e9a3e828b8ed1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9e4b03e_30a6a8af",
        "filename": "build/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2018-02-28T18:59:46Z",
      "side": 1,
      "message": "\u003e Oh, it doesn\u0027t want \"-Wl,\" apparently.\n\nAre we invoking ld.lld directly or letting the compiler driver do it for us? The driver should have stripped away the “-Wl,”.",
      "parentUuid": "84e45c33_8ede8d42",
      "revId": "2ab9fc4da905bd5a2cac6e2d901e9a3e828b8ed1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6682d4bc_c04f5ec0",
        "filename": "build/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2018-02-28T19:06:32Z",
      "side": 1,
      "message": "We\u0027re using clang++ as the linker. I have no idea why no -Wl, I find the (lack of) command line documentation for these tools totally insane. \n\nHere\u0027s with -Wl:\n\nscottmg@around:/work/cp2/crashpad$ ninja -C out/lin crashpad_client_test\nninja: Entering directory `out/lin\u0027\n[0-\u003e1/1 ~1] Regenerating ninja files\n[1-\u003e1/2 ~1] LINK ./crashpad_handler\nFAILED: crashpad_handler \n../../third_party/linux/clang/linux-amd64/bin/clang++ -Wl,-static-libstdc++ -Wl,--as-needed -Wl,-z,noexecstack --sysroot\u003d../../third_party/linux/sysroot -pthread -pie -o \"./crashpad_handler\" -Wl,--start-group obj/handler/crashpad_handler.main.o obj/tools/tool_support.tool_support.o obj/handler/libhandler.a obj/compat/libcompat.a obj/client/libclient.a obj/third_party/mini_chromium/mini_chromium/base/libbase.a obj/util/libutil.a obj/minidump/libminidump.a obj/snapshot/libsnapshot.a  -Wl,--end-group -lz\n/usr/local/google/work/cp2/crashpad/out/lin/../../third_party/linux/clang/linux-amd64/bin/ld.lld: error: unknown argument: -static-libstdc++\nclang-7.0: error: linker command failed with exit code 1 (use -v to see invocation)\nninja: build stopped: subcommand failed.\n\n\nand without -Wl:\n\nscottmg@around:/work/cp2/crashpad$ ninja -C out/lin crashpad_client_test -v -j1\nninja: Entering directory `out/lin\u0027\n[0-\u003e1/1 ~1] ../../../buildtools/linux64/gn --root\u003d../.. -q gen .\n[0-\u003e1/1 ~1] ../../third_party/linux/clang/linux-amd64/bin/clang++ -static-libstdc++ -Wl,--as-needed -Wl,-z,noexecstack --sysroot\u003d../../third_party/linux/sysroot -pthread -pie -o \"./crashpad_handler\" -Wl,--start-group obj/handler/crashpad_handler.main.o obj/tools/tool_support.tool_support.o obj/handler/libhandler.a obj/compat/libcompat.a obj/client/libclient.a obj/third_party/mini_chromium/mini_chromium/base/libbase.a obj/util/libutil.a obj/minidump/libminidump.a obj/snapshot/libsnapshot.a  -Wl,--end-group -lz\nscottmg@around:/work/cp2/crashpad$ ldd out/lin/crashpad_client_test\n\tlinux-vdso.so.1 (0x00007ffc787c9000)\n\tlibm.so.6 \u003d\u003e /lib/x86_64-linux-gnu/libm.so.6 (0x00007fdaaa985000)\n\tlibgcc_s.so.1 \u003d\u003e /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007fdaaa76e000)\n\tlibpthread.so.0 \u003d\u003e /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007fdaaa551000)\n\tlibc.so.6 \u003d\u003e /lib/x86_64-linux-gnu/libc.so.6 (0x00007fdaaa1b2000)\n\t/lib64/ld-linux-x86-64.so.2 (0x00007fdaaaefa000)",
      "parentUuid": "f9e4b03e_30a6a8af",
      "revId": "2ab9fc4da905bd5a2cac6e2d901e9a3e828b8ed1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88a96c49_4c3b5914",
        "filename": "build/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2018-02-27T23:07:27Z",
      "side": 1,
      "message": "…but you’re really using libc++.",
      "range": {
        "startLine": 174,
        "startChar": 9,
        "endLine": 174,
        "endChar": 17
      },
      "revId": "2ab9fc4da905bd5a2cac6e2d901e9a3e828b8ed1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acba476d_6ee0ac91",
        "filename": "build/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2018-02-28T00:39:03Z",
      "side": 1,
      "message": "Oh, really? I thought -l just meant add a \"lib\" prefix and look for it on the libpath, so this would find \"libstdc++\". Is \"c++\" special cased somehow?",
      "parentUuid": "88a96c49_4c3b5914",
      "range": {
        "startLine": 174,
        "startChar": 9,
        "endLine": 174,
        "endChar": 17
      },
      "revId": "2ab9fc4da905bd5a2cac6e2d901e9a3e828b8ed1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "305384ff_eb06a109",
        "filename": "build/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2018-02-28T02:15:34Z",
      "side": 1,
      "message": "\u003e Oh, really? I thought -l just meant add a \"lib\" prefix and look for it on the libpath, so this would find \"libstdc++\". Is \"c++\" special cased somehow?\n\nI\u0027m just misreading things all over the place.\n\nBut the distinction raises an interesting question: if we use -stdlib libc++ for both compile and link, does that help?",
      "parentUuid": "acba476d_6ee0ac91",
      "range": {
        "startLine": 174,
        "startChar": 9,
        "endLine": 174,
        "endChar": 17
      },
      "revId": "2ab9fc4da905bd5a2cac6e2d901e9a3e828b8ed1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd2571c3_df393533",
        "filename": "build/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2018-02-28T03:41:03Z",
      "side": 1,
      "message": "Unfortunately it doesn\u0027t seem to link (\"unable to find library -lc++\").\n\nThat lib is in the clang directory, but not in the sysroot. I don\u0027t think the Linux distributions ship libc++ by default (at least not old ones), so we\u0027d be back to needing static linking then too I guess.",
      "parentUuid": "305384ff_eb06a109",
      "range": {
        "startLine": 174,
        "startChar": 9,
        "endLine": 174,
        "endChar": 17
      },
      "revId": "2ab9fc4da905bd5a2cac6e2d901e9a3e828b8ed1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}