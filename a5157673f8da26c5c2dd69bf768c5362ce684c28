{
  "comments": [
    {
      "key": {
        "uuid": "b125d47e_813f10d2",
        "filename": "build/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2018-02-27T21:08:09Z",
      "side": 1,
      "message": "Man, this is OLD.",
      "range": {
        "startLine": 162,
        "startChar": 38,
        "endLine": 162,
        "endChar": 43
      },
      "revId": "a5157673f8da26c5c2dd69bf768c5362ce684c28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80d6800a_b1cb9f9e",
        "filename": "build/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2018-02-27T21:08:09Z",
      "side": 1,
      "message": "I don’t like this for the general case. If it’s absolutely necessary for the bots, then that’s fine, but I don’t want to have to deal with this weirdo stuff in normal builds on proper up-to-date systems.",
      "revId": "a5157673f8da26c5c2dd69bf768c5362ce684c28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edb13ffc_62c6975b",
        "filename": "build/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2018-02-27T21:12:39Z",
      "side": 1,
      "message": "Hmm, OK. I don\u0027t really want to add yet-another-weird flag either since we\u0027re already up to needing to set:\n\nclang_path \u003d \"//third_party/linux/clang/linux-amd64\"\ntarget_sysroot \u003d \"//third_party/linux/sysroot\"\nenable_http_transport_libcurl \u003d false\n\nWould you settle for linking libstdc++ statically when target_sysroot is set on Linux?",
      "parentUuid": "80d6800a_b1cb9f9e",
      "revId": "a5157673f8da26c5c2dd69bf768c5362ce684c28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9cf6c4f_36b8f69b",
        "filename": "build/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2018-02-27T21:17:43Z",
      "side": 1,
      "message": "\u003e Hmm, OK. I don\u0027t really want to add yet-another-weird flag either since we\u0027re already up to needing to set:\n\u003e \n\u003e clang_path \u003d \"//third_party/linux/clang/linux-amd64\"\n\u003e target_sysroot \u003d \"//third_party/linux/sysroot\"\n\u003e enable_http_transport_libcurl \u003d false\n\u003e \n\u003e Would you settle for linking libstdc++ statically when target_sysroot is set on Linux?\n\nI don’t really like that either. (1) it’s pretty unexpected, and (2) this static thing is a hack and it will cause problems*. I’d only be OK with it if it’s scoped so narrowly as to solve a very specific problem**.",
      "parentUuid": "edb13ffc_62c6975b",
      "revId": "a5157673f8da26c5c2dd69bf768c5362ce684c28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d689218_227c3af5",
        "filename": "build/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2018-02-27T21:30:17Z",
      "side": 1,
      "message": "Yeah, it\u0027s all goofy. :(",
      "parentUuid": "e9cf6c4f_36b8f69b",
      "revId": "a5157673f8da26c5c2dd69bf768c5362ce684c28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba222a8c_e6d5ca39",
        "filename": "build/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2018-02-27T21:17:43Z",
      "side": 1,
      "message": "*For example, how do you know that this is even the right C++ library? It might be libc++, for example.",
      "revId": "a5157673f8da26c5c2dd69bf768c5362ce684c28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fc78fa2_ff079fa3",
        "filename": "build/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2018-02-27T21:17:43Z",
      "side": 1,
      "message": "**Maybe we should rethink the problem, though. Based on the comment, you’re saying that we need to maintain compatibility with 14.04. If the sysroot we’re picking up now doesn’t really let us do that, maybe it’s not the right sysroot.",
      "revId": "a5157673f8da26c5c2dd69bf768c5362ce684c28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d433c572_1ca9fc5c",
        "filename": "build/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2018-02-27T21:30:17Z",
      "side": 1,
      "message": "Yeah, that\u0027s the part I\u0027m having trouble with too. It seems odd that Chromium claims 14.04, but we don\u0027t actually have a 14.04-compatible sysroot to build against, but that sort of manages to work because we use libc++.\n\nLooking back, it seems that we dropped the Jessie (\u003d\u003d Debian 8) sysroots fairly recently: https://chromium-review.googlesource.com/c/chromium/src/+/767615. I guess I\u0027ll see if we can build against those instead, as that should satisfy our requirements more accurately.",
      "parentUuid": "6fc78fa2_ff079fa3",
      "revId": "a5157673f8da26c5c2dd69bf768c5362ce684c28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "045b33e9_88474b6f",
        "filename": "build/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2018-02-27T21:35:17Z",
      "side": 1,
      "message": "Apparently not, it doesn\u0027t have make_unique in usr/include/c++/.\n\nI dunno. I guess a \"link_libstdcpp_statically\" hack flag. Bleh.",
      "parentUuid": "d433c572_1ca9fc5c",
      "revId": "a5157673f8da26c5c2dd69bf768c5362ce684c28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c617a50f_3f8478fb",
        "filename": "build/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2018-02-27T21:46:39Z",
      "side": 1,
      "message": "I guess this comes down to it not really being possible to (dynamically) use C++14 on 14.04.\n\nSo I guess another option is that we could switch back to -std\u003dc++11, but that seems sad (and I\u0027m not sure how much work would be involved.)",
      "parentUuid": "045b33e9_88474b6f",
      "revId": "a5157673f8da26c5c2dd69bf768c5362ce684c28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f768204a_1125b006",
        "filename": "build/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2018-02-27T23:05:12Z",
      "side": 1,
      "message": "\u003e I dunno. I guess a \"link_libstdcpp_statically\" hack flag. Bleh.\n\nI think, given the constraints, that’s the winner that nobody was rooting for.",
      "parentUuid": "c617a50f_3f8478fb",
      "revId": "a5157673f8da26c5c2dd69bf768c5362ce684c28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}