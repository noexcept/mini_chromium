{
  "comments": [
    {
      "key": {
        "uuid": "dee19571_d2714207",
        "filename": "base/rand_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-28T16:59:14Z",
      "side": 1,
      "message": "Fix the indentation.\n\nBut you don’t need a new local variable for this, you can reuse the parameter as the OS_WIN block below does.",
      "revId": "7532b291415c98c322efe275810e8a8f8f638f34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b10865bc_19e3c8b7",
        "filename": "base/rand_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2017-11-28T18:58:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dee19571_d2714207",
      "revId": "7532b291415c98c322efe275810e8a8f8f638f34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d314c785_ee271637",
        "filename": "base/rand_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-28T16:59:14Z",
      "side": 1,
      "message": "Since the signedness appears irrelevant, let’s leave it off to keep things concise (and to avoid making things appear that it’s relevant). And since the Windows implementation already does essentially the same thing, let’s recycle the naming used there (or rename things there to match what’s here). That’ll help readers of each implementation understand which parts are analogous.",
      "revId": "7532b291415c98c322efe275810e8a8f8f638f34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "296d6213_bc07d39e",
        "filename": "base/rand_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2017-11-28T18:58:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d314c785_ee271637",
      "revId": "7532b291415c98c322efe275810e8a8f8f638f34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69333b1c_50a38fb0",
        "filename": "base/rand_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-28T16:59:14Z",
      "side": 1,
      "message": "Seems weird that the syscall interface puts this requirement on the caller, because ZX_CPRNG_DRAW_MAX_LEN becomes a caller-side constant meaning that (1) it can never be lowered on the kernel side and (2) even if it’s raised on the kernel side, older clients won’t be able to take advantage, and (3) even if it’s raised on the kernel side, care needs to be taken in the SDK to preserve compatibility with older kernels.\n\nIf that’s the interface today, then that’s that, and the code you wrote is correct. But you’re more plugged in to Fuchsia development: is this the kind of issue that we should be bringing up with them (or fixing ourselves) as it comes up?",
      "revId": "7532b291415c98c322efe275810e8a8f8f638f34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "098c1d9a_aa14bb0f",
        "filename": "base/rand_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2017-11-28T18:58:16Z",
      "side": 1,
      "message": "It\u0027s a good question, I was just more or less following the example in the docs, but the evolution question makes sense to me.\n\nI filed ZX-1419 upstream. Unfortunately Fuchsia\u0027s bugtracker is still internal even though the code is public, supposed to be resolved ... some day.",
      "parentUuid": "69333b1c_50a38fb0",
      "revId": "7532b291415c98c322efe275810e8a8f8f638f34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2b8cb4f_c3f4b913",
        "filename": "base/rand_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 120,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2017-11-28T00:25:14Z",
      "side": 1,
      "message": "SEO for Zircon was just starting to get better before it was renamed; you can often still find the correct docs my searching for example for \"mx_cprng_draw\" and then changing \"magenta\" to \"zircon\" in the URL.\n\nBut they\u0027re here https://fuchsia.googlesource.com/zircon/+/HEAD/docs/syscalls/cprng_draw.md in any case.",
      "range": {
        "startLine": 120,
        "startChar": 25,
        "endLine": 120,
        "endChar": 38
      },
      "revId": "7532b291415c98c322efe275810e8a8f8f638f34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d08b876_56cdd04e",
        "filename": "base/rand_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-28T16:59:14Z",
      "side": 1,
      "message": "We should probably have a ZX_LOG family, including ZX_CHECK, for things like this. It should use zx_status_get_string() and also show the number, like we do with errno/GetLastError() for PLOG, etc.",
      "revId": "7532b291415c98c322efe275810e8a8f8f638f34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5715c908_532afbe9",
        "filename": "base/rand_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2017-11-28T19:09:29Z",
      "side": 1,
      "message": "I guess because status isn\u0027t global/tls, it needs to be a separate macro from PLOG unfortunately. Hmm... OK, this\u0027ll have to be in Chromium first then, so let me file a todo here and follow up on that separately and then roll it in here.",
      "parentUuid": "1d08b876_56cdd04e",
      "revId": "7532b291415c98c322efe275810e8a8f8f638f34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6980913f_baeb7b95",
        "filename": "base/rand_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-28T19:46:19Z",
      "side": 1,
      "message": "\u003e I guess because status isn\u0027t global/tls, it needs to be a separate macro from PLOG unfortunately.\n\nYeah, this’ll work more like MACH_LOG and NTSTATUS_LOG.\n\nIt doesn’t *have* to be in Chromium. NTSTATUS_LOG isn’t, for example. But if it’s going to be useful in Chromium too, then yeah, it makes sense to do it there first.",
      "parentUuid": "5715c908_532afbe9",
      "revId": "7532b291415c98c322efe275810e8a8f8f638f34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fbee72d_3ee9e4c8",
        "filename": "base/rand_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2017-11-28T20:28:47Z",
      "side": 1,
      "message": "Assuming we\u0027ll use it in Crashpad, it sort of has to go in base so that we can use it here in mini_chromium and also in Crashpad? (Anyway, I think makes sense upstream.)",
      "parentUuid": "6980913f_baeb7b95",
      "revId": "7532b291415c98c322efe275810e8a8f8f638f34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9620f130_5bf89dbe",
        "filename": "base/rand_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-28T21:08:29Z",
      "side": 1,
      "message": "\u003e Assuming we\u0027ll use it in Crashpad, it sort of has to go in base so that we can use it here in mini_chromium and also in Crashpad? (Anyway, I think makes sense upstream.)\n\nYeah, I agree, I was just saying that if there was no reason to have it in Chromium it could be a Crashpad special like NTSTATUS_LOG is. (Although Chromium could probably benefit from that too.)",
      "parentUuid": "2fbee72d_3ee9e4c8",
      "revId": "7532b291415c98c322efe275810e8a8f8f638f34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ac8ddd8_baf05de6",
        "filename": "base/rand_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2017-11-28T21:27:10Z",
      "side": 1,
      "message": "\u003e \u003e Assuming we\u0027ll use it in Crashpad, it sort of has to go in base so that we can use it here in mini_chromium and also in Crashpad? (Anyway, I think makes sense upstream.)\n\u003e \n\u003e Yeah, I agree, I was just saying that if there was no reason to have it in Chromium it could be a Crashpad special like NTSTATUS_LOG is. (Although Chromium could probably benefit from that too.)\n\n(I\u0027m probably being dense here, and it\u0027s not really important now that it\u0027s going into base anyway, but in case something like this comes up again...)\n\nI meant that we\u0027re in mini_chromium here, so in order to have mini_chromium/base/rand_util.cc use ZX_LOG, where could ZX_LOG live, if not in base? And then we can\u0027t put it solely in mini_chromium/base otherwise Crashpad wouldn\u0027t build when in Chromium.\n\n... Oh, are you\u0027re thinking because Crashpad doesn\u0027t currently build on Fuchsia in Chromium, we\u0027d be OK? Then ZX_LOG could be an extension to the base API, as it\u0027ll never actually build against Chromium base. I guess that\u0027s a (slightly confusing) possibility, but I\u0027m not totally sure whether we\u0027ll end up building Crashpad only as an Fuchsia-OS-service thing, or whether we also might want Crashpad as component in Chromium similar to Windows and Mac.",
      "parentUuid": "9620f130_5bf89dbe",
      "revId": "7532b291415c98c322efe275810e8a8f8f638f34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6804dca3_e07b8c8b",
        "filename": "base/rand_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-11-28T21:52:26Z",
      "side": 1,
      "message": "\u003e (I\u0027m probably being dense here, and it\u0027s not really important now that it\u0027s going into base anyway, but in case something like this comes up again...)\n\u003e \n\u003e I meant that we\u0027re in mini_chromium here\n\nDOH! My density: that’s the part that I’m missing.",
      "parentUuid": "0ac8ddd8_baf05de6",
      "revId": "7532b291415c98c322efe275810e8a8f8f638f34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0cc88ea6_95d1be57",
        "filename": "base/rand_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1001558
      },
      "writtenOn": "2017-11-29T00:56:56Z",
      "side": 1,
      "message": "This is currently incorrect. The kernel doesn\u0027t guarantee that read_len \u003d\u003d actual. This is just like read in POSIX (except it doesn\u0027t fail as long as you pass something valid). You are required to loop until you\u0027ve draw read_len().\n\n(Note: this interface seems to confuse people, so we\u0027ll change it and hide the loop (and ZX_CPRNG_DRAW_MAX_LEN) in the VDSO. But please implement this loop until then).\n\nhttps://fuchsia.googlesource.com/zircon/+/HEAD/docs/syscalls/cprng_draw.md provides example code for how to draw.\n\nDiscussion in ZX-1419",
      "revId": "7532b291415c98c322efe275810e8a8f8f638f34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}