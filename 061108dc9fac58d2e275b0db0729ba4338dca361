{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2fdf8e36_0890c875",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1456088
      },
      "writtenOn": "2022-11-01T13:05:38Z",
      "side": 1,
      "message": "Hey Mark, we are enabling Bazel builds in Fuchsia, and we need these files for Bazel to work.\n\nI took the blaze BUILD file from google3 and made it work in Bazel, also made everything as generic as possible so it\u0027s not coupled with Fuchsia\u0027s Bazel build, although I\u0027ve only tested this with Fuchsia.",
      "revId": "061108dc9fac58d2e275b0db0729ba4338dca361",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17d64680_a51f5770",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2022-11-01T13:35:34Z",
      "side": 1,
      "message": "This is a whole separate build description. I don’t think we want that in this upstream tree.\n\nWe used to have two build systems in this tree, and it was a pain. In https://chromium-review.googlesource.com/c/3032786 last year, we were finally able to remove the GYP build. I’m not keen on regressing that.",
      "revId": "061108dc9fac58d2e275b0db0729ba4338dca361",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1008b563_da19235a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1374378
      },
      "writtenOn": "2022-11-01T16:14:27Z",
      "side": 1,
      "message": "Understood, Mark.\nWould this work if the Fuchsia team and other teams that consume your code with Bazel were responsible for the build definitions?\nOne upside is that we won\u0027t need to litter your GN files with `if is_fuchsia` etc statements.",
      "parentUuid": "17d64680_a51f5770",
      "revId": "061108dc9fac58d2e275b0db0729ba4338dca361",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5b89914_668ffaf8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2022-11-01T16:22:54Z",
      "side": 1,
      "message": "\u003e Understood, Mark.\n\u003e Would this work if the Fuchsia team and other teams that consume your code with Bazel were responsible for the build definitions?\n\nIf the file’s in your own repository, you could easily be responsible for it.",
      "parentUuid": "1008b563_da19235a",
      "revId": "061108dc9fac58d2e275b0db0729ba4338dca361",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84cd966c_e1dda186",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1456088
      },
      "writtenOn": "2022-11-01T23:29:38Z",
      "side": 1,
      "message": "That\u0027s fair, thanks for taking a look Mark, I\u0027ll find a way to track these files in our repo.",
      "parentUuid": "c5b89914_668ffaf8",
      "revId": "061108dc9fac58d2e275b0db0729ba4338dca361",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ac8c7fa_f0e02d07",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1456088
      },
      "writtenOn": "2022-11-01T23:29:38Z",
      "side": 1,
      "message": "Thanks for taking a look Mark,",
      "revId": "061108dc9fac58d2e275b0db0729ba4338dca361",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33efac9d_c0e0cddb",
        "filename": "BUILD.bazel",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1374378
      },
      "writtenOn": "2022-11-01T16:14:27Z",
      "side": 1,
      "message": "How viable is it to reduce some of these statements to globs so that the build defs become more robust to source changes?",
      "revId": "061108dc9fac58d2e275b0db0729ba4338dca361",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f22abbd6_d26f1ad7",
        "filename": "BUILD.bazel",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2022-11-01T16:22:54Z",
      "side": 1,
      "message": "\u003e How viable is it to reduce some of these statements to globs so that the build defs become more robust to source changes?\n\nWe disfavor globs because they make the build description imprecise and subject to surprising external factors.",
      "parentUuid": "33efac9d_c0e0cddb",
      "revId": "061108dc9fac58d2e275b0db0729ba4338dca361",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "061108dc9fac58d2e275b0db0729ba4338dca361",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "061108dc9fac58d2e275b0db0729ba4338dca361",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Commit-Queue",
        "description": {
          "value": "Submit requirement for the \u0027Commit-Queue\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "061108dc9fac58d2e275b0db0729ba4338dca361",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "061108dc9fac58d2e275b0db0729ba4338dca361",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "061108dc9fac58d2e275b0db0729ba4338dca361",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}