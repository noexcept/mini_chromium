{
  "comments": [
    {
      "key": {
        "uuid": "0106f009_fcc176c0",
        "filename": "build/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-12-09T04:12:10Z",
      "side": 1,
      "message": "This list was sorted to begin with, let’s keep it that way.",
      "revId": "d55625a1d3d9e0d05e52c90014693f18b8431023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8733945_b1c84313",
        "filename": "build/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2017-12-10T03:59:12Z",
      "side": 1,
      "message": "Oops, I pasted and gn formatted assuming it\u0027d sort, but I suppose it makes sense that cflags aren\u0027t sorted because they could have -I something order-sensitive.",
      "parentUuid": "0106f009_fcc176c0",
      "revId": "d55625a1d3d9e0d05e52c90014693f18b8431023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1421de7f_a1ec61f9",
        "filename": "build/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-12-09T04:12:10Z",
      "side": 1,
      "message": "Let’s go in order of conceptual stages: compiler \u003c assembler \u003c archiver \u003c linker. Same in the next block.",
      "revId": "d55625a1d3d9e0d05e52c90014693f18b8431023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b86ab823_5c69caa5",
        "filename": "build/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2017-12-10T03:59:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1421de7f_a1ec61f9",
      "revId": "d55625a1d3d9e0d05e52c90014693f18b8431023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ccc2eee0_bac80b86",
        "filename": "build/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 259,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-12-09T04:12:10Z",
      "side": 1,
      "message": "solink_module is for loadable modules as opposed to shared libraries intended to be linked against directly, right? If so, don’t want this to vary between Mac and non-Mac. Nobody should get a “lib” prefix by default to match the GYP build and particularly the test code’s expectations. The “lib” prefix is only for shared libraries intended to be linked against (which I think is tool(\"solink\"), no module?)\n\nIf Chromium’s GN build behaves differently and we’ve got to maintain compatibility with that, then we’ll have to figure out some way to deal. Setting output_prefix \u003d \"\" explicitly in our own targets, perhaps?",
      "revId": "d55625a1d3d9e0d05e52c90014693f18b8431023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84238945_d9bf1dbf",
        "filename": "build/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 259,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2017-12-10T03:59:12Z",
      "side": 1,
      "message": "I guess this probably didn\u0027t work on Fuchsia either, I just didn\u0027t notice yet because various tests were failing for other reasons.\n\nIt does seem that Chromium sets lib for both solink and solink_module: https://cs.chromium.org/chromium/src/build/toolchain/gcc_toolchain.gni?rcl\u003dc40a6ce516cb542ed97bb7a8c81bd0626bc9ed7e\u0026l\u003d485\n\n...\n\nThat makes me puzzled how how crashpad_tests worked on Mac in Chromium crashpad_tests though. It seems like https://cs.chromium.org/chromium/src/third_party/crashpad/crashpad/snapshot/crashpad_info_client_options_test.cc?rcl\u003dc40a6ce516cb542ed97bb7a8c81bd0626bc9ed7e\u0026l\u003d145 should return crashpad_snapshot_test_module.so. And it does, and indeed the built file matches that name.\n\n...\n\nHuh, output_prefix is set in solink_module for Chromium, but it doesn\u0027t actually do anything. But it does here in mini_chromium. I have no idea why.\n\n...\n\nI found output_prefix_override and thought maybe that was the cause (a magic GN variable that tells it not to use output_prefix on a per target basis), but I don\u0027t see that being set.\n\nHrm.",
      "parentUuid": "ccc2eee0_bac80b86",
      "revId": "d55625a1d3d9e0d05e52c90014693f18b8431023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50c2925c_1c1d17e3",
        "filename": "build/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 259,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-12-10T14:50:37Z",
      "side": 1,
      "message": "\u003e I guess this probably didn\u0027t work on Fuchsia either, I just didn\u0027t notice yet because various tests were failing for other reasons.\n\u003e \n\u003e It does seem that Chromium sets lib for both solink and solink_module: https://cs.chromium.org/chromium/src/build/toolchain/gcc_toolchain.gni?rcl\u003dc40a6ce516cb542ed97bb7a8c81bd0626bc9ed7e\u0026l\u003d485\n\u003e \n\u003e ...\n\u003e \n\u003e That makes me puzzled how how crashpad_tests worked on Mac in Chromium crashpad_tests though. It seems like https://cs.chromium.org/chromium/src/third_party/crashpad/crashpad/snapshot/crashpad_info_client_options_test.cc?rcl\u003dc40a6ce516cb542ed97bb7a8c81bd0626bc9ed7e\u0026l\u003d145 should return crashpad_snapshot_test_module.so. And it does, and indeed the built file matches that name.\n\u003e \n\u003e ...\n\u003e \n\u003e Huh, output_prefix is set in solink_module for Chromium, but it doesn\u0027t actually do anything. But it does here in mini_chromium. I have no idea why.\n\u003e \n\u003e ...\n\u003e \n\u003e I found output_prefix_override and thought maybe that was the cause (a magic GN variable that tells it not to use output_prefix on a per target basis), but I don\u0027t see that being set.\n\u003e \n\u003e Hrm.\n\nCould it be that output_prefix isn’t set in tool(\"solink_module\") in https://chromium.googlesource.com/chromium/src/+/02378e677739f2bedc13fd375ae73973b247c351/build/toolchain/mac/BUILD.gn#313?\n\nIt’s not great that Chromium’s build/toolchain/mac/BUILD.gn basically duplicates build/toolchain/gcc_toolchain.gni. There’s a TODO at https://chromium.googlesource.com/chromium/src/+/02378e677739f2bedc13fd375ae73973b247c351/build/toolchain/mac/BUILD.gn#5 to deal with that.\n\nI do think that in contrast to shared_library/solink, for loadable_module/solink_module, there shouldn’t be a “lib” prefix by default, but we’d need to make that change in Chromium in order to do it here. The prefix is bogus, it’s only needed for the -l linker convention, but loadable_modules don’t normally need to be found by the linker in that way. If that’s hard or there’s resistance, then I guess we’ll wind up needing to specify output_prefix \u003d \"\" in all of these targets ourselves.\n\nI guess that’s why this works for macOS, and we’d have discovered that it didn’t work for any other gcc_toolchain OS as soon as we got it working, which is about where we are now.",
      "parentUuid": "84238945_d9bf1dbf",
      "revId": "d55625a1d3d9e0d05e52c90014693f18b8431023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "099f5996_eda1aa3e",
        "filename": "build/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 275,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2017-12-09T04:12:10Z",
      "side": 1,
      "message": "We’d want this for Android for sure, and probably the rest of Linux too. Does Chromium do this differently/per-OS?",
      "revId": "d55625a1d3d9e0d05e52c90014693f18b8431023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5838c1ff_8cc66e91",
        "filename": "build/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 275,
      "author": {
        "id": 1144260
      },
      "writtenOn": "2017-12-10T03:59:12Z",
      "side": 1,
      "message": "Poking around a little, I don\u0027t think Mac Chromium does this. Instead, what I should have is -fPIC in compilation, which I assume does the right thing at link time then depending on whether it\u0027s in a shared library or a PIE executable. At least it seems to work OK on Mac this way.",
      "parentUuid": "099f5996_eda1aa3e",
      "revId": "d55625a1d3d9e0d05e52c90014693f18b8431023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}